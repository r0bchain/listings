name: Generate a build and push to another branch

on:
  push:
    branches:
      - master # The branch name your are commit the new changes

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Push
    env:
      APP_KEY: ${{ secrets.APP_KEY }}
      APP_NAME: ${{ vars.APP_NAME }}
      DEFAULT_CATEGORY_IMAGE: ${{ vars.DEFAULT_CATEGORY_IMAGE }}
      TOPICS_IMAGE: ${{ vars.TOPICS_IMAGE }}
      DEFAULT_CITY: ${{ vars.DEFAULT_CITY }}
      RANDOM_IMAGE_KEY: ${{ secrets.RANDOM_IMAGE_KEY }}
      PINATA_SECRET_ACCESS_KEY: ${{ secrets.PINATA_SECRET_ACCESS_KEY }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      APP_DEBUG: ${{ vars.APP_DEBUG }}
    steps:
      - name: git-checkout
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "APP_NAME=${{ secrets.APP_NAME }}" >> .env
          echo "DEFAULT_CATEGORY_IMAGE=${{ vars.DEFAULT_CATEGORY_IMAGE }}" >> .env
          echo "TOPICS_IMAGE=\"${{ vars.TOPICS_IMAGE }}\"" >> .env
          echo "DEFAULT_CITY=${{ vars.DEFAULT_CITY }}" >> .env
          echo "RANDOM_IMAGE_KEY=${{ secrets.RANDOM_IMAGE_KEY }}" >> .env
          echo "PINATA_SECRET_ACCESS_KEY=${{ secrets.PINATA_SECRET_ACCESS_KEY }}" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "APP_DEBUG=${{ vars.APP_DEBUG }}" >> .env

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          coverage: none

      - name: Run composer install
        run: composer install -n --prefer-dist

      - name: Install all dependencies
        run: npm install

      - name: Build
        run: npm run build # The build command of your project

      - name: Push
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: master # The branch name where you want to push the assets
          FOLDER: public/build # The directory where your assets are generated
          TARGET_DIR: public_html
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit message

      - name: Deploy to Hostinger
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./ # Adjust this to your build directory if needed
          server-dir: /public_html/ # Adjust this to your server directory if needed
          exclude: |
            node_modules/
            vendor/
            .env
            .git/
            .gitignore
            .gitattributes
            .vscode/
            .idea/
            public/hot/
            public/storage/
            storage/*.key
            storage/app/public/
            storage/framework/cache/data/
            storage/framework/sessions/
            storage/framework/testing/
            storage/framework/views/
            storage/logs/
            Homestead.yaml
            Homestead.json
            npm-debug.log
            yarn-error.log